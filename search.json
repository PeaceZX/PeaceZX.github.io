[{"title":"git","url":"/2018/07/25/git/git/","content":"\n**github已经建了一个月了，还是不会把代码传上去:expressionless:最近写了不少脚本，所以趁这个机会学习一下:stuck_out_tongue_winking_eye:\n\n[![github.svg.png](https://i.loli.net/2018/07/26/5b58d5df2c0c7.png)](https://i.loli.net/2018/07/26/5b58d5df2c0c7.png)\n# 第一步 github官网操作\n\n1. 在github首页也就是官网上建立一个**new repository**\n2. 建好之后，右上角会有**clone or download，copy**那个地址\n\n# 第二步 本地操作\n\n1. 右键想要上传的项目，点击**git bash here**， 进入下面页面，Test_Bluetooth即为项目名。\n\n[![913913-20160823171048308-194895299.png](https://i.loli.net/2018/07/26/5b58d62f12bed.png)](https://i.loli.net/2018/07/26/5b58d62f12bed.png)\n\n2. 将刚刚建立仓库的地址**克隆到本地** \n\ngit clone （刚刚复制的地址） -*不要括号*\n\n[![913913-20160823171143980-741152042.png](https://i.loli.net/2018/07/26/5b58d62f45945.png)](https://i.loli.net/2018/07/26/5b58d62f45945.png)\n\n做完这一步就会在项目的目录里出现新建的一个文件夹，名字为刚刚在网页上建立仓库的名字。\n将所有的文件都放到这个新建的文件里。\n\n3. cd test (test为仓库名字）\n4. git add\n5. git commit -m first(first是想要提交的信息会显示在github文件名的后面）\n6. git push -u origin master (目的是把本地仓库push到github上）\n\n嘻嘻，是不是很简单。喜欢**点个赞**呀！ :blush::blush::blush::blush::blush:","tags":["git"]},{"title":"unity3D_Project","url":"/2018/07/24/unity3D-Project/unity3D-Project/","content":"\n![下载.png](https://i.loli.net/2018/07/26/5b58d735e3bc6.png)\n\n# Terrian\n\nThis is a VR project. So, building the virtual garden based on a 3D terrian is necessary. It looks like a flat plane after creating this gameObject. A terrian contains a lot of points, like hill, lakes, trees and grass. All the above should be carefully designed to make the terrian as real as possiable.\n\n# River\n\nAfter creating the terrian. Raising it up, then digging a hole to make a lake or river. The lower part of the terrian will be filled of water. import the standard asset, there is a gameObject called water can be used.\n\n# The texture\n\nCreating the walking lane to make sure the player in this game know which way should go.\n\n#Flower and trees\n\nI use several assets from the assesr store.\n","tags":["Unity3D"]},{"title":"Unity3D总结","url":"/2018/07/23/unity3D-Project/Unity3D_projectFlowchart/","content":"![下载.png](https://i.loli.net/2018/07/26/5b58d735e3bc6.png)\n# 什么是Unity3D:relaxed:\n\n强大的游戏开发引擎，基于此，游戏的开发将变得异常简单。\n\n# 开发脚本 CSharp\n\nJavaScript和C#是主要的脚本语言\n\n# 我的项目步骤\n\n1. 建立地形，因为我是VR游戏开发，所以使用3D地形。\n2. 在地形上建立山脉，湖泊和植被\n3. 根据需要在Asset Store下载需要的的Asset。\n4. 布置场景\n5. 编程：这一步主要是碰撞触发事件\n6. 选择Player设置为Openvr\n7. Built到window平台\n\n:sparkles:\n","tags":["Unity3D"]},{"title":"MySQL我的基础理解","url":"/2018/07/23/MySQL/我的基础理解/","content":"[![images.png](https://i.loli.net/2018/07/26/5b58d6ad8c43c.png)](https://i.loli.net/2018/07/26/5b58d6ad8c43c.png)\n\n前两天入门了一下MySQL,毕竟市场上使用率最高的数据库。\n\n我觉得吧，数据库就是一个存放和管理数据的仓库，就像商品被分类存放在不同的仓库一样，这里不过是把商品变成了数据。\n\n主要流程就是：\n\n1. 建立数据库，A库，B库， C库等\n2. 建立库中的表，向EXCEL中的表一样，A库甲表，A库乙表，B库丙表\n3. 建立表的列，就是分类，例如：名字、ID、电话等\n4. 给列分配数据\n5. 操作表：读取，插入，删除等\n\n这就是一个大概的操作流程，我觉得只要多用，具体的参数都是可以熟悉的。\n\n至于更深层次的学习挖掘，日后吧。\n","tags":["MySQL"]},{"title":"markdown","url":"/2018/07/22/markdown/markdown/","content":"\n[![dsfdfs.png](https://i.loli.net/2018/07/25/5b5796e43f2a9.png)](https://i.loli.net/2018/07/25/5b5796e43f2a9.png)\n\n## MarkDown语法中代码怎么换行？\n\n**问题：**\n\nMarkDown语法中明明有代码标签但是为什么代码的展示这么弱？连换行都不行？\n\n回复：\n\n不是markdown的语法弱没有准备代码标签，也不是前台展示代码渲染框架没有为代码显示做准备，是我们自己不了解……\n其实百度的时候会发现，几乎没有答案……（除了我在贴吧里面问了这么个问题以外^_^）\n这种现象只能反应两种情况\n\n大家都知道根本不需要问\n是一个很前卫的话题，几乎没有人了解\n很显然，对于MarkDown语法中代码怎么换行的问题，应该更靠近前者。\n发现代码不会换行的同学不出意料的话， 应该都是这么写的\n\n**在最一开始的三个点与上面的内容价格空格就行了**\n","tags":["Markdown"]},{"title":"终于！把个人博客搭建起来了！","url":"/2018/07/22/终于！把个人博客搭建起来了！/终于！把个人博客搭建起来了！/","content":"\n\n# 终于把个人博客做出来了\n*今天是22号周日*\n## 感受\n--\n\n我很~~开心，激动~~，咳咳，困~~~\n\n以后我会间歇性把我的学习笔记和感悟post上来，作为个人学术积累。\n\n 其实我。。。\n\n 比较喜欢发微博，可以来我[微博互动](https://weibo.com/u/3526038944/home?wvr=5)\n\n 或者直接在本博客下面留言，欢迎探讨各类~~学术知识~~，生活分享，人生感悟。\n\n[![Student-3-icon.png](https://i.loli.net/2018/07/25/5b5795394484c.png)](https://i.loli.net/2018/07/25/5b5795394484c.png)\n"},{"title":"Markdown语法总结","url":"/2018/07/22/markdown/Markdown语法总结/","content":"[![dsfdfs.png](https://i.loli.net/2018/07/25/5b5796e43f2a9.png)](https://i.loli.net/2018/07/25/5b5796e43f2a9.png)\n\n**Markdown** 是搭建网站必须，所以才学习的。但是在学习和应用的同时，发现这个语法精简了工作，提高了效率。因为它*偏重内容而不是格式*。以往我们写一遍文章，需要花比较多的时间在格式的排版上，比如页边距，行距，字体等等，而在Markdown里，使用标准定义的语法，减去了这些排版步骤，让人们将精力更多的集中在内容梳理上。这个语法规则大受欢迎是不无道理的。\n\n# 一、标题\n\n```\n# 一级标题\n## 二级标题\n### 三级标题\n（以此类推）\n```\n这里注意：**一定要在#前加空格**\n\n显示的效果为\n# 一级标题\n## 二级标题\n### 三级标题\n\n# 二、字体\n\n**加粗**\n\n要加粗的文字左右分别用两个*号包起来\n\n**斜体**\n\n要倾斜的文字左右分别用一个*号包起来\n\n**斜体加粗**\n\n要倾斜和加粗的文字左右分别用三个*号包起来\n\n**删除线**\n\n要加删除线的文字左右分别用两个~~号包起来\n\n示例：\n\n```\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n效果如下：\n**这是加粗的文字**\n*这是倾斜的文字*\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n\n# 三、引用\n\n符号 > 大于号\n随便几个大于号都等同于引用，至少一个，多写无妨，看心情咯。\n\n例子：\n\n```\n>引用一下看看\n```\n\n显示：\n\n>应用一下看看\n\n\n# 四、分割线\n\n需要三个以上的-或者*\n\n---\n***\n\n# 五、图片\n\n图片需要注意，本地的有点麻烦还得弄到GitHub库，所以选择一个合适的图床来的简单方便。\n我用的是：[SM.,MS](https://sm.ms/)\n非常好用，上传图片后有直接的Markdown链接引用。\n\n图片的格式为：\n\n```\n![图片名](图片地址)\n```\n\n![green.jpg](https://i.loli.net/2018/07/23/5b54fc9f6d48a.jpg)\n\n这是图片不带链接的，带链接的跟上面引用网站的一样啦。\n\n\n# 六、列表\n\n**无序列表**\n\n-+*三种其一都可以\n\n```\n-内容\n+内容\n*内容\n```\n\n-嗯嗯\n\n+嗯嗯\n\n*嗯嗯\n\n** 有序列表**\n\n···\n1.内容\n2.内容\n3.内容\n```\n\n**列表嵌套**\n\n上级和下级之间敲三个空格\n\n```\n-eee\n   1. aaa\n   2. eee\n···\n\n-eee\n   1. f\n   2. f\n\n# 七、表格\n\n```\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n```\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n\n\nlist|list|list:\n---|:--|-:-:\ncontent  |content   | content\n\n# 八、代码\n\n```\n代码\n```\n\n# 九、流程图\n\n```\nflow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n\n\nflow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&\n","tags":["Markdown"]}]