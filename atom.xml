<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>peacezx的博客-一个95后后端开发程序员</title>
  
  <subtitle>华为上研所-消费者BG软件开发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://PeaceZX.github.io/"/>
  <updated>2018-09-27T01:03:17.752Z</updated>
  <id>http://PeaceZX.github.io/</id>
  
  <author>
    <name>dake song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux一些基本的进程管理命令</title>
    <link href="http://PeaceZX.github.io/2018/09/27/linux/"/>
    <id>http://PeaceZX.github.io/2018/09/27/linux/</id>
    <published>2018-09-27T01:03:17.000Z</published>
    <updated>2018-09-27T01:03:17.752Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;进程相关操作，很好的提高效率哦&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;进程： 执行中的程序&lt;br&gt;当程序以可执行文件存放在存储中，并且运行的时候，每个进程都会被动态的分配&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;系统资源&lt;/li&gt;
&lt;li&gt;内存&lt;/li&gt;
&lt;li&gt;安全属性&lt;/li&gt;
&lt;li&gt;与之相关的状态
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="Linux" scheme="http://PeaceZX.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>python中的error和exception基础</title>
    <link href="http://PeaceZX.github.io/2018/09/27/errors/"/>
    <id>http://PeaceZX.github.io/2018/09/27/errors/</id>
    <published>2018-09-27T00:41:32.000Z</published>
    <updated>2018-09-27T00:42:30.914Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Syntax-Errors&quot;&gt;&lt;a href=&quot;#Syntax-Errors&quot; class=&quot;headerlink&quot; title=&quot;Syntax Errors&quot;&gt;&lt;/a&gt;Syntax Errors&lt;/h1&gt;&lt;p&gt;Syntax errors, also known as &lt;strong&gt;parsing errors.&lt;/strong&gt;&lt;br&gt;语法错误，也就是不符合python语法规范，比如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; while True print(&amp;apos;Hello world&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while True print(&amp;apos;Hello world&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SyntaxError: invalid syntax&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>记于生日前</title>
    <link href="http://PeaceZX.github.io/2018/09/26/diary1/"/>
    <id>http://PeaceZX.github.io/2018/09/26/diary1/</id>
    <published>2018-09-26T07:33:47.000Z</published>
    <updated>2018-09-26T23:51:27.540Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;毕业了，就这么毕业了。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;没有任何多余的想法，只想抓紧进入岗位，抛洒一片热血。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;小学六年，初中三年，高中三年，大学四年，研究生一年，&lt;strong&gt;17年&lt;/strong&gt; 学生时代已经彻底翻片儿。27号我将迎来我的第 &lt;strong&gt;23个生日&lt;/strong&gt;。现在很多人喜欢叫老，不知道是真觉得老，还是自嘲。&lt;/p&gt;
&lt;h3 id=&quot;而我，正值青春。&quot;&gt;&lt;a href=&quot;#而我，正值青春。&quot; class=&quot;headerlink&quot; title=&quot;而我，正值青春。&quot;&gt;&lt;/a&gt;而我，正值青春。&lt;/h3&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://PeaceZX.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>关于C语言输入的探究</title>
    <link href="http://PeaceZX.github.io/2018/09/25/C%E8%AF%AD%E8%A8%80%E8%BE%93%E5%85%A5/"/>
    <id>http://PeaceZX.github.io/2018/09/25/C语言输入/</id>
    <published>2018-09-25T03:40:07.000Z</published>
    <updated>2018-09-26T07:47:58.357Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;首先需要知道，在C语言中没有字符串类型，用字符数组处理字符串&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;字符串数组定义： char 数组名[a][b]&lt;/p&gt;
&lt;p&gt;有一维，二维数组，  &lt;em&gt;数组名既是数组名又是这个字符串的首地址&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;输入输出方法：逐个字符输入输出：&lt;strong&gt;%c&lt;/strong&gt;   整个字符串输入输出：&lt;strong&gt;%s&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="C" scheme="http://PeaceZX.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>python中strings &amp; lists, end关键字和循环语句</title>
    <link href="http://PeaceZX.github.io/2018/09/25/python/"/>
    <id>http://PeaceZX.github.io/2018/09/25/python/</id>
    <published>2018-09-25T03:39:48.000Z</published>
    <updated>2018-09-25T08:00:37.237Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Escape-quote-“”-and-‘’&quot;&gt;&lt;a href=&quot;#Escape-quote-“”-and-‘’&quot; class=&quot;headerlink&quot; title=&quot;Escape quote(“” and ‘’)&quot;&gt;&lt;/a&gt;Escape quote(“” and ‘’)&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;‘’&lt;/strong&gt; and &lt;strong&gt;“”&lt;/strong&gt; are the same used in python&lt;br&gt;two ways to escape quotes:&lt;/p&gt;
&lt;p&gt;1.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;doesn\&amp;apos;t&amp;apos;  # use \&amp;apos; to escape the single quote...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;doesn&amp;apos;t&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;doesn&amp;apos;t&amp;quot;  # ...or use double quotes instead&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;doesn&amp;apos;t&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>浅谈python的module以及if __name__ == __main__的理解</title>
    <link href="http://PeaceZX.github.io/2018/09/25/module/"/>
    <id>http://PeaceZX.github.io/2018/09/25/module/</id>
    <published>2018-09-25T03:39:38.000Z</published>
    <updated>2018-09-26T23:57:26.852Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;模块化理解&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;Modules&quot;&gt;&lt;a href=&quot;#Modules&quot; class=&quot;headerlink&quot; title=&quot;Modules&quot;&gt;&lt;/a&gt;Modules&lt;/h1&gt;&lt;p&gt;A module is &lt;strong&gt;a file&lt;/strong&gt; containing Python definitions and statements. (suffix .py is the file name and also the module name)&lt;br&gt;Within a module, the module name(as a string) is available as the value of the global variable &lt;strong&gt;&lt;em&gt;name&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;if we only import the module name:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Tuple &amp; Dictionary以及loop的几种方法</title>
    <link href="http://PeaceZX.github.io/2018/09/25/tuple/"/>
    <id>http://PeaceZX.github.io/2018/09/25/tuple/</id>
    <published>2018-09-25T03:39:26.000Z</published>
    <updated>2018-09-26T07:32:43.109Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tuple&quot;&gt;&lt;a href=&quot;#tuple&quot; class=&quot;headerlink&quot; title=&quot;tuple&quot;&gt;&lt;/a&gt;tuple&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;tuple&lt;/strong&gt; is another sequence data type.&lt;/p&gt;
&lt;p&gt;A tuple consists of a number of values separated by commas.&lt;br&gt;They may be input with or without parenthess.&lt;br&gt;It is not possible to assign to the indivdual items of a tuple, however it is possible to create tuples which contain mutable objects, such as list.&lt;/p&gt;
&lt;p&gt;tuples are &lt;strong&gt;immutable&lt;/strong&gt;&lt;br&gt;lists are &lt;strong&gt;mutable&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python列表的相关函数</title>
    <link href="http://PeaceZX.github.io/2018/09/25/list/"/>
    <id>http://PeaceZX.github.io/2018/09/25/list/</id>
    <published>2018-09-25T03:39:03.000Z</published>
    <updated>2018-09-26T07:32:46.442Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;list.append(x)&lt;/strong&gt;&lt;br&gt;add an item to the end of the list. Equivalent to a[len(a):]=[x]&lt;br&gt;in a list, the last item can be indexed as a[len(a)-1]&lt;br&gt;When we want to add an item at the last, a[len(a):] = [] wil creat a eampt list a[len(a)]&lt;br&gt;Additinally we need to notice the [x] it should be a list&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;list.extend(iterable)&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>set() &amp; sort() &amp; sorted() &amp; range() &amp; break &amp; continue</title>
    <link href="http://PeaceZX.github.io/2018/09/25/set/"/>
    <id>http://PeaceZX.github.io/2018/09/25/set/</id>
    <published>2018-09-25T03:38:48.000Z</published>
    <updated>2018-09-25T03:38:48.572Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;set&quot;&gt;&lt;a href=&quot;#set&quot; class=&quot;headerlink&quot; title=&quot;set()&quot;&gt;&lt;/a&gt;set()&lt;/h1&gt;&lt;p&gt;创建一个 &lt;strong&gt;无序不重复&lt;/strong&gt; 元素集，可以进行关系测试，删除重复数据，还可以计算交集，差集、并集等。set不记录元素位置或者插入点，不支持index, slice。&lt;br&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python的format() &amp; string conversion(repr()&amp;str())</title>
    <link href="http://PeaceZX.github.io/2018/09/25/inputandoutput/"/>
    <id>http://PeaceZX.github.io/2018/09/25/inputandoutput/</id>
    <published>2018-09-25T03:32:16.000Z</published>
    <updated>2018-09-26T23:59:14.308Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;More control over formatting of the output than simply printing space-separated values.&lt;/p&gt;
&lt;p&gt;Using &lt;strong&gt;formatted string literals&lt;/strong&gt;, or the &lt;strong&gt;str.format()&lt;/strong&gt; method.&lt;/p&gt;
&lt;h2 id=&quot;str-format&quot;&gt;&lt;a href=&quot;#str-format&quot; class=&quot;headerlink&quot; title=&quot;str.format()&quot;&gt;&lt;/a&gt;str.format()&lt;/h2&gt;&lt;p&gt;此函数可以快速处理各种字符串&lt;br&gt;它通过 &lt;strong&gt;{}&lt;/strong&gt; 和 &lt;strong&gt;：&lt;/strong&gt; 代替 &lt;strong&gt;%&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过字典来设置参数的话，需要在字典名前加两个**&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>EOF问题</title>
    <link href="http://PeaceZX.github.io/2018/09/25/eof/"/>
    <id>http://PeaceZX.github.io/2018/09/25/eof/</id>
    <published>2018-09-25T03:31:52.000Z</published>
    <updated>2018-09-26T07:32:46.441Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;先看一道字符串的题目：&lt;br&gt;求字符串最后一个单词的长度&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="C" scheme="http://PeaceZX.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>FP Presentation Structure</title>
    <link href="http://PeaceZX.github.io/2018/08/30/presentation/"/>
    <id>http://PeaceZX.github.io/2018/08/30/presentation/</id>
    <published>2018-08-30T06:39:02.000Z</published>
    <updated>2018-09-24T03:17:09.623Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Presentation-Structure&quot;&gt;&lt;a href=&quot;#Presentation-Structure&quot; class=&quot;headerlink&quot; title=&quot;Presentation Structure&quot;&gt;&lt;/a&gt;Presentation Structure&lt;/h1&gt;&lt;h2 id=&quot;The-Background&quot;&gt;&lt;a href=&quot;#The-Background&quot; class=&quot;headerlink&quot; title=&quot;The Background&quot;&gt;&lt;/a&gt;The Background&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;talking about the &lt;strong&gt;reasons&lt;/strong&gt; why i choose this topic(relative each time visit her, she don’t know who am i, a lot of news reports people sufffer from dementia)&lt;/li&gt;
&lt;li&gt;then explore the &lt;strong&gt;symptom of dementia&lt;/strong&gt;, the &lt;strong&gt;currently treatment for dementia&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;the study of elderly people&lt;/li&gt;
&lt;li&gt;cognitive functions(memory, attention, comprehension, language)&lt;/li&gt;
&lt;li&gt;VR, AR, MR comparision
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>一切为了通过面试（为面试而准备）</title>
    <link href="http://PeaceZX.github.io/2018/08/17/learning/"/>
    <id>http://PeaceZX.github.io/2018/08/17/learning/</id>
    <published>2018-08-17T03:45:07.000Z</published>
    <updated>2018-09-26T23:56:58.072Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;在这一篇中，记录的知识点会很杂,因为这是为了面试而搜索整理的，可以没事拿来读一读，或多或少都会有帮助。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;h2 id=&quot;索引&quot;&gt;&lt;a href=&quot;#索引&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h2&gt;&lt;p&gt;通常状况下，我们会有大量的数据需要存储，分析和处理。而当前市场上，动辄上百G的内容。对于如此大的数据，查找起来会非常的耗时耗资源，一般查找方法&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>Several ways to increase Python performance</title>
    <link href="http://PeaceZX.github.io/2018/08/12/performance/"/>
    <id>http://PeaceZX.github.io/2018/08/12/performance/</id>
    <published>2018-08-12T02:29:28.000Z</published>
    <updated>2018-09-25T07:54:07.858Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;python本身就跑不过C, 干不过C++，性能方面是个软肋。所以高效编程尤为重要。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1-import的使用&quot;&gt;&lt;a href=&quot;#1-import的使用&quot; class=&quot;headerlink&quot; title=&quot;1. import的使用&quot;&gt;&lt;/a&gt;1. import的使用&lt;/h1&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python+Sqlite3+Opencv自动化测试（STB本地服务器_页面抓取_图片对比）</title>
    <link href="http://PeaceZX.github.io/2018/08/10/python-Sqlite3-Opencv/"/>
    <id>http://PeaceZX.github.io/2018/08/10/python-Sqlite3-Opencv/</id>
    <published>2018-08-10T03:18:55.000Z</published>
    <updated>2018-09-25T07:45:27.790Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;实习期间做的小项目，整理一下：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;STB服务器搭建起来后，需要检测显示的内容与期望匹配。这里就需要一个自动化测试工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; 作为编程脚本语言，因为其中含有大量的库可以引用，会大大加快开发效率。其中的webdriver, PIL, tkinter等库将发挥巨大的作用。&lt;/p&gt;
&lt;p&gt;在图片对比方面，使用 &lt;strong&gt;opencv&lt;/strong&gt; ，因为其适用于各大主流平台，具有强移植性。&lt;/p&gt;
&lt;p&gt;数据库本来想用MySQL, 后来发现python有自带的 &lt;strong&gt;SQlite3&lt;/strong&gt; 数据库，这是一个轻量级数据库，适合处理数据量不是很大的项目，加上python有内置module,因此使用起来非常方便。以上就是这个项目的主要架构。&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="python" scheme="http://PeaceZX.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>git基本操作</title>
    <link href="http://PeaceZX.github.io/2018/07/25/git/git/"/>
    <id>http://PeaceZX.github.io/2018/07/25/git/git/</id>
    <published>2018-07-25T12:40:43.000Z</published>
    <updated>2018-09-26T01:48:23.517Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;github已经建了一个月了，还是不会把代码传上去&lt;img class=&quot;github-emoji&quot; title=&quot;expressionless&quot; alt=&quot;expressionless&quot; src=&quot;https://assets-cdn.github.com/images/icons/emoji/unicode/1f611.png?v8&quot; height=&quot;20&quot; width=&quot;20&quot;&gt;最近写了不少脚本，所以趁这个机会学习一下&lt;img class=&quot;github-emoji&quot; title=&quot;stuck_out_tongue_winking_eye&quot; alt=&quot;stuck_out_tongue_winking_eye&quot; src=&quot;https://assets-cdn.github.com/images/icons/emoji/unicode/1f61c.png?v8&quot; height=&quot;20&quot; width=&quot;20&quot;&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2018/07/26/5b58d5df2c0c7.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://i.loli.net/2018/07/26/5b58d5df2c0c7.png&quot; alt=&quot;github.svg.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一步-github官网操作&quot;&gt;&lt;a href=&quot;#第一步-github官网操作&quot; class=&quot;headerlink&quot; title=&quot;第一步 github官网操作&quot;&gt;&lt;/a&gt;第一步 github官网操作&lt;/h1&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="git" scheme="http://PeaceZX.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>终于~把个人博客搭建起来了！</title>
    <link href="http://PeaceZX.github.io/2018/07/22/%E7%BB%88%E4%BA%8E%EF%BC%81%E6%8A%8A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B5%B7%E6%9D%A5%E4%BA%86%EF%BC%81/%E7%BB%88%E4%BA%8E%EF%BC%81%E6%8A%8A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B5%B7%E6%9D%A5%E4%BA%86%EF%BC%81/"/>
    <id>http://PeaceZX.github.io/2018/07/22/终于！把个人博客搭建起来了！/终于！把个人博客搭建起来了！/</id>
    <published>2018-07-22T04:41:14.000Z</published>
    <updated>2018-09-25T07:39:10.044Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;终于把个人博客做出来了&quot;&gt;&lt;a href=&quot;#终于把个人博客做出来了&quot; class=&quot;headerlink&quot; title=&quot;终于把个人博客做出来了&quot;&gt;&lt;/a&gt;终于把个人博客做出来了&lt;/h1&gt;&lt;p&gt;&lt;em&gt;今天是7月22号周日&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;感受&quot;&gt;&lt;a href=&quot;#感受&quot; class=&quot;headerlink&quot; title=&quot;感受&quot;&gt;&lt;/a&gt;感受&lt;/h2&gt;&lt;p&gt;–&lt;/p&gt;
&lt;p&gt;我很&lt;del&gt;开心，激动&lt;/del&gt;，咳咳，困~~~&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown语法总结</title>
    <link href="http://PeaceZX.github.io/2018/07/22/markdown/Markdown%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://PeaceZX.github.io/2018/07/22/markdown/Markdown语法总结/</id>
    <published>2018-07-22T03:44:26.000Z</published>
    <updated>2018-09-24T02:24:31.938Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://i.loli.net/2018/07/25/5b5796e43f2a9.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://i.loli.net/2018/07/25/5b5796e43f2a9.png&quot; alt=&quot;dsfdfs.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; 是搭建网站必须，所以才学习的。但是在学习和应用的同时，发现这个语法精简了工作，提高了效率。因为它&lt;em&gt;偏重内容而不是格式&lt;/em&gt;。以往我们写一遍文章，需要花比较多的时间在格式的排版上，比如页边距，行距，字体等等，而在Markdown里，使用标准定义的语法，减去了这些排版步骤，让人们将精力更多的集中在内容梳理上。这个语法规则大受欢迎是不无道理的。&lt;/p&gt;
&lt;h1 id=&quot;一、标题&quot;&gt;&lt;a href=&quot;#一、标题&quot; class=&quot;headerlink&quot; title=&quot;一、标题&quot;&gt;&lt;/a&gt;一、标题&lt;/h1&gt;
    
    </summary>
    
      <category term="干货" scheme="http://PeaceZX.github.io/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
  </entry>
  
</feed>
